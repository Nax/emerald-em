name: Continuous Integration Workflow

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: write

jobs:
  data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install system dependencies
        run: sudo apt-get install cmake ninja-build gcc-arm-none-eabi libpng-dev

      - name: Fetch ENC
        run: |
          curl -# -L -o emerald.enc "${{secrets.ENC_URL}}"
          gpg --quiet --batch --yes --decrypt --passphrase="${{secrets.ENC_KEY}}" --output emerald.gba emerald.enc
          rm -f emerald.enc

      - name: Build Data
        run: |
          original_rom="${PWD}/emerald.gba"
          mkdir -p build
          cd build
          cmake .. -DORIGINAL_ROM=${original_rom} -G Ninja
          ninja data

      - name: Upload Data
        uses: actions/upload-artifact@v4
        with:
          name: data
          path: build/data
  gui-win64:
    runs-on: windows-latest
    needs: [data]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.8.*
          arch: win64_msvc2022_64
          cache: true

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          name: data
          path: ${{ github.workspace }}/data_prebuilt

      - name: Setup build
        run: |
          mkdir -p build
          mkdir -p tree

      - name: Build GUI
        run: |
          cmake .. -A x64 -DEXTERNAL_DATA=${{ github.workspace }}/data_prebuilt -DBUILD_GUI=ON
          cmake --build . --config Release
        working-directory: ./build

      - name: Package
        run: |
          cmake --build . --config Release --target package
          cmake -E remove_directory ./pkg/_CPack_Packages
        working-directory: ./build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pkg-win64
          path: build/pkg

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [gui-win64]
    runs-on: ubuntu-latest
    steps:
      - name: Download win64
        uses: actions/download-artifact@v4
        with:
          name: pkg-win64
          path: pkg

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "pkg/*"
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
